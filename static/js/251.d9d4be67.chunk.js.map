{"version":3,"file":"static/js/251.d9d4be67.chunk.js","mappings":"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","sources":["Pages/Movies/Movies.styled.js","Pages/Movies/Movies.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: white;\n  letter-spacing: 2px;\n  margin-bottom: 30px;\n  animation: tracking-in-expand 0.7s cubic-bezier(0.215, 0.61, 0.355, 1) both;\n\n  @keyframes tracking-in-expand {\n    0% {\n      letter-spacing: -0.5em;\n      opacity: 0;\n    }\n    40% {\n      opacity: 0.6;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const SpanTitle = styled.span`\n  color: #f44336;\n  letter-spacing: 2px;\n  margin-bottom: 30px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Input = styled.input`\n  border-top: 2px solid #f44336;\n  border-bottom: 2px solid #f44336;\n  border-left: none;\n  border-right: none;\n  outline: none;\n  background-color: transparent;\n  color: white;\n  font-family: 'Rajdhani', sans-serif;\n  font-size: 20px;\n  width: 300px;\n  padding-left: 10px;\n`;\n\nexport const Button = styled.button`\n  color: white;\n  text-decoration: none;\n  font-size: 20px;\n  border: none;\n  background: none;\n  font-family: 'Rajdhani', sans-serif;\n  cursor: pointer;\n\n  &::before {\n    margin-left: auto;\n  }\n\n  &::after {\n    content: '';\n    width: 0%;\n    height: 2px;\n    background: #f44336;\n    display: block;\n    transition: 0.5s;\n  }\n\n  &::before {\n    content: '';\n    width: 0%;\n    height: 2px;\n    background: #f44336;\n    display: block;\n    transition: 0.5s;\n  }\n\n  &:hover::after {\n    width: 100%;\n  }\n\n  &:hover::before {\n    width: 100%;\n  }\n`;\n\nexport const NoneText = styled.p`\n  margin-top: 10px;\n  font-size: 25px;\n  color: white;\n`;\n\nexport const SearchList = styled.ul`\n  margin-top: 30px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useNavigate, Link } from 'react-router-dom';\nimport { searchMovies } from 'services/moviesAPI';\nimport {\n  Button,\n  Form,\n  Input,\n  SearchList,\n  SpanTitle,\n  Title,\n} from './Movies.styled';\nimport styled from '@emotion/styled';\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: white;\n  font-size: 20px;\n\n  &:hover {\n    color: #f44336;\n    transition: 0.3s;\n  }\n`;\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const name = new URLSearchParams(location.search).get('name');\n    if (name) {\n      setQuery(name);\n      handleSearch(name);\n    }\n  }, [location]);\n\n  const handleSearch = async name => {\n    try {\n      const results = await searchMovies(name);\n      setSearchResults(results);\n    } catch (error) {\n      console.log('Error searching movies:', error);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    navigate(`/movies?name=${query}`);\n  };\n\n  return (\n    <>\n      <Title>\n        Search <SpanTitle>movies</SpanTitle>\n      </Title>\n      <Form onSubmit={handleSubmit}>\n        <Input value={query} onChange={e => setQuery(e.target.value)} />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      <SearchList>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={location}>\n              {movie.original_title}&nbsp;(\n              {movie.release_date.substring(0, 4)})\n            </StyledLink>\n          </li>\n        ))}\n      </SearchList>\n    </>\n  );\n};\n\nexport default Movies;\n","// https://api.themoviedb.org/3/movie/11?api_key=f73865c93b2adf185bfa72e66b6a561c\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f73865c93b2adf185bfa72e66b6a561c';\n\nexport const getTrendingMovies = async timeWindow => {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const trendingMovies = response.data.results;\n    return trendingMovies;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: 'credits,videos',\n      },\n    });\n\n    const movieDetails = response.data;\n    return movieDetails;\n  } catch (error) {\n    console.log('Error fetching movie details:', error.message);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    });\n\n    const searchResults = response.data.results;\n    return searchResults;\n  } catch (error) {\n    console.log('Error searching movies:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const movieCast = response.data;\n    return movieCast;\n  } catch (error) {\n    console.log('Error fetching movie cast:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const movieReviews = response.data;\n    return movieReviews;\n  } catch (error) {\n    console.log('Error fetching movie reviews:', error.message);\n    throw error;\n  }\n};\n"],"names":["Title","styled","SpanTitle","Form","Input","Button","SearchList","StyledLink","Link","useState","query","setQuery","searchResults","setSearchResults","navigate","useNavigate","location","useLocation","useEffect","name","URLSearchParams","search","get","handleSearch","searchMovies","results","console","log","onSubmit","e","preventDefault","value","onChange","target","type","map","movie","to","id","state","original_title","release_date","substring","axios","API_KEY","getTrendingMovies","timeWindow","params","api_key","response","trendingMovies","data","message","getMovieDetails","movieId","append_to_response","movieDetails","getMovieCast","movieCast","getMovieReviews","movieReviews"],"sourceRoot":""}