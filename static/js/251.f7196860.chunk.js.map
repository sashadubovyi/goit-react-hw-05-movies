{"version":3,"file":"static/js/251.f7196860.chunk.js","mappings":"+RAEaA,EAAQC,EAAAA,GAAAA,GAAH,yFAMLC,EAAYD,EAAAA,GAAAA,KAAH,2FAMTE,EAAOF,EAAAA,GAAAA,KAAH,wDAKJG,EAAQH,EAAAA,GAAAA,MAAH,qTAcLI,EAASJ,EAAAA,GAAAA,OAAH,imBA8CNK,GANWL,EAAAA,GAAAA,EAAH,kFAMKA,EAAAA,GAAAA,GAAH,8C,mBClEjBM,GAAaN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,uJAkDhB,EAvCe,WACb,OAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KAEMC,EAAY,mCAAG,WAAMC,GAAN,8EACnBA,EAAIC,iBADe,mBAGKC,EAAAA,EAAAA,IAAaP,GAHlB,OAGXQ,EAHW,OAIjBL,EAAiBK,GAJA,gDAMjBC,QAAQC,IAAI,0BAAZ,MANiB,yDAAH,sDAUlB,OACE,iCACE,UAACpB,EAAD,WAAO,WACE,SAACE,EAAD,UAAW,eAEpB,UAACC,EAAD,YACE,SAACC,EAAD,CAAOiB,MAAOX,EAAOY,SAAU,SAAAC,GAAC,OAAIZ,EAASY,EAAEC,OAAOH,MAAtB,KAChC,SAAChB,EAAD,CAAQoB,KAAK,SAASC,QAASZ,EAA/B,SAA6C,yBAI/C,SAACR,EAAD,UACGM,EAAce,KAAI,SAAAC,GAAK,OACtB,yBACE,UAACrB,EAAD,CAAYsB,GAAE,kBAAaD,EAAME,IAAjC,UACGF,EAAMG,eAAe,QACrBH,EAAMI,aAAaC,UAAU,EAAG,GAAG,QAH/BL,EAAME,GADO,QAW/B,C,kMC1DDI,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,WAAMC,GAAN,kGAENH,EAAAA,EAAAA,IAAU,sBAAuB,CACtDI,OAAQ,CACNC,QAASJ,KAJgB,cAEvBK,EAFuB,OAQvBC,EAAiBD,EAASE,KAAKxB,QARR,kBAStBuB,GATsB,sCAW7BtB,QAAQC,IAAI,kCAAmC,KAAMuB,SAXxB,8DAAH,sDAgBjBC,EAAe,mCAAG,WAAMC,GAAN,kGAEJX,EAAAA,EAAAA,IAAA,iBAAoBW,GAAW,CACpDP,OAAQ,CACNC,QAASJ,EACTW,mBAAoB,oBALG,cAErBN,EAFqB,OASrBO,EAAeP,EAASE,KATH,kBAUpBK,GAVoB,sCAY3B5B,QAAQC,IAAI,gCAAiC,KAAMuB,SAZxB,8DAAH,sDAiBf1B,EAAY,mCAAG,WAAMP,GAAN,kGAEDwB,EAAAA,EAAAA,IAAU,gBAAiB,CAChDI,OAAQ,CACNC,QAASJ,EACTzB,MAAOA,KALa,cAElB8B,EAFkB,OASlB5B,EAAgB4B,EAASE,KAAKxB,QATZ,kBAUjBN,GAViB,sCAYxBO,QAAQC,IAAI,0BAA2B,KAAMuB,SAZrB,8DAAH,sDAiBZK,EAAY,mCAAG,WAAMH,GAAN,kGAEDX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAuC,CAC5DP,OAAQ,CACNC,QAASJ,KAJW,cAElBK,EAFkB,OAQlBS,EAAYT,EAASE,KARH,kBASjBO,GATiB,sCAWxB9B,QAAQC,IAAI,6BAA8B,KAAMuB,SAXxB,8DAAH,sDAgBZO,EAAe,mCAAG,WAAML,GAAN,kGAEJX,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAuC,CAC5DP,OAAQ,CACNC,QAASJ,KAJc,cAErBK,EAFqB,OAQrBW,EAAeX,EAASE,KARH,kBASpBS,GAToB,sCAW3BhC,QAAQC,IAAI,gCAAiC,KAAMuB,SAXxB,8DAAH,qD","sources":["Pages/Movies/Movies.styled.js","Pages/Movies/Movies.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: white;\n  letter-spacing: 2px;\n  margin-bottom: 30px;\n`;\n\nexport const SpanTitle = styled.span`\n  color: #f44336;\n  letter-spacing: 2px;\n  margin-bottom: 30px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Input = styled.input`\n  border-top: 2px solid #f44336;\n  border-bottom: 2px solid #f44336;\n  border-left: none;\n  border-right: none;\n  outline: none;\n  background-color: transparent;\n  color: white;\n  font-family: 'Rajdhani', sans-serif;\n  font-size: 20px;\n  width: 300px;\n  padding-left: 10px;\n`;\n\nexport const Button = styled.button`\n  color: white;\n  text-decoration: none;\n  font-size: 20px;\n  border: none;\n  background: none;\n  font-family: 'Rajdhani', sans-serif;\n  cursor: pointer;\n\n  &::before {\n    margin-left: auto;\n  }\n\n  &::after {\n    content: '';\n    width: 0%;\n    height: 2px;\n    background: #f44336;\n    display: block;\n    transition: 0.5s;\n  }\n\n  &::before {\n    content: '';\n    width: 0%;\n    height: 2px;\n    background: #f44336;\n    display: block;\n    transition: 0.5s;\n  }\n\n  &:hover::after {\n    width: 100%;\n  }\n\n  &:hover::before {\n    width: 100%;\n  }\n`;\n\nexport const NoneText = styled.p`\n  margin-top: 10px;\n  font-size: 25px;\n  color: white;\n`;\n\nexport const SearchList = styled.ul`\n  margin-top: 30px;\n`;\n","import { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { searchMovies } from 'services/moviesAPI';\nimport {\n  Button,\n  Form,\n  Input,\n  SearchList,\n  SpanTitle,\n  Title,\n} from './Movies.styled';\nimport styled from '@emotion/styled';\n\nconst StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: white;\n  font-size: 20px;\n\n  &:hover {\n    color: #f44336;\n    transition: 0.3s;\n  }\n`;\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleSearch = async evt => {\n    evt.preventDefault();\n    try {\n      const results = await searchMovies(query);\n      setSearchResults(results);\n    } catch (error) {\n      console.log('Error searching movies:', error);\n    }\n  };\n\n  return (\n    <>\n      <Title>\n        Search <SpanTitle>movies</SpanTitle>\n      </Title>\n      <Form>\n        <Input value={query} onChange={e => setQuery(e.target.value)} />\n        <Button type=\"submit\" onClick={handleSearch}>\n          &#8672;&nbsp;Search\n        </Button>\n      </Form>\n      <SearchList>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`}>\n              {movie.original_title}&nbsp;(\n              {movie.release_date.substring(0, 4)})\n            </StyledLink>\n          </li>\n        ))}\n      </SearchList>\n    </>\n  );\n};\n\nexport default Movies;\n","// https://api.themoviedb.org/3/movie/11?api_key=f73865c93b2adf185bfa72e66b6a561c\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f73865c93b2adf185bfa72e66b6a561c';\n\nexport const getTrendingMovies = async timeWindow => {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const trendingMovies = response.data.results;\n    return trendingMovies;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: 'credits,videos',\n      },\n    });\n\n    const movieDetails = response.data;\n    return movieDetails;\n  } catch (error) {\n    console.log('Error fetching movie details:', error.message);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    });\n\n    const searchResults = response.data.results;\n    return searchResults;\n  } catch (error) {\n    console.log('Error searching movies:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const movieCast = response.data;\n    return movieCast;\n  } catch (error) {\n    console.log('Error fetching movie cast:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const movieReviews = response.data;\n    return movieReviews;\n  } catch (error) {\n    console.log('Error fetching movie reviews:', error.message);\n    throw error;\n  }\n};\n"],"names":["Title","styled","SpanTitle","Form","Input","Button","SearchList","StyledLink","NavLink","useState","query","setQuery","searchResults","setSearchResults","handleSearch","evt","preventDefault","searchMovies","results","console","log","value","onChange","e","target","type","onClick","map","movie","to","id","original_title","release_date","substring","axios","API_KEY","getTrendingMovies","timeWindow","params","api_key","response","trendingMovies","data","message","getMovieDetails","movieId","append_to_response","movieDetails","getMovieCast","movieCast","getMovieReviews","movieReviews"],"sourceRoot":""}