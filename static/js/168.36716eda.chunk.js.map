{"version":3,"file":"static/js/168.36716eda.chunk.js","mappings":"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","sources":["Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const DetailsBox = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px;\n`;\n\nexport const ListCast = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ItemCast = styled.li`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Poster = styled.img`\n  min-height: 600px;\n  min-width: 400px;\n`;\n\nexport const BoxInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const LinkBox = styled.li`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Title = styled.h3`\n  font-family: 'Rajdhani', sans-serif;\n  font-weight: 800;\n  font-size: 40px;\n  color: white;\n  animation: tracking-in-expand 0.7s cubic-bezier(0.215, 0.61, 0.355, 1) both;\n\n  @keyframes tracking-in-expand {\n    0% {\n      letter-spacing: -0.5em;\n      opacity: 0;\n    }\n    40% {\n      opacity: 0.6;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const SpanTitle = styled.span`\n  color: #f44336;\n  letter-spacing: 2px;\n  margin-bottom: 30px;\n`;\n\nexport const BoldText = styled.h3`\n  font-family: 'Rajdhani', sans-serif;\n  font-weight: 600;\n  color: white;\n`;\n\nexport const Text = styled.h3`\n  font-family: 'Rajdhani', sans-serif;\n  font-weight: 400;\n  color: white;\n`;\n\nexport const GoBackBtn = styled.button`\n  color: white;\n  text-decoration: none;\n  font-size: 20px;\n  border: none;\n  background: none;\n  font-family: 'Rajdhani', sans-serif;\n  cursor: pointer;\n\n  &::before {\n    margin-left: auto;\n  }\n\n  &::after {\n    content: '';\n    width: 0%;\n    height: 2px;\n    background: #f44336;\n    display: block;\n    transition: 0.5s;\n  }\n\n  &::before {\n    content: '';\n    width: 0%;\n    height: 2px;\n    background: #f44336;\n    display: block;\n    transition: 0.5s;\n  }\n\n  &:hover::after {\n    width: 100%;\n  }\n\n  &:hover::before {\n    width: 100%;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { NavLink, Outlet, useParams, useNavigate } from 'react-router-dom';\nimport { getMovieDetails } from 'services/moviesAPI';\nimport {\n  BoldText,\n  BoxInfo,\n  DetailsBox,\n  GoBackBtn,\n  ItemCast,\n  Poster,\n  SpanTitle,\n  Text,\n  Title,\n} from './MovieDetails.styled';\nimport styled from '@emotion/styled';\n\nconst StyledNavLink = styled(NavLink)`\n  font-family: 'Rajdhani', sans-serif;\n  font-weight: 600;\n  font-size: 40px;\n  color: white;\n\n  &.active {\n    color: #f44336;\n  }\n`;\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const data = await getMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log('Error fetching movie details:', error);\n      }\n    };\n\n    if (!movie) {\n      fetchMovieDetails();\n    }\n  }, [movieId, movie]);\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  if (!movie) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <>\n      <GoBackBtn onClick={handleGoBack}>Go back</GoBackBtn>\n      <DetailsBox>\n        <ItemCast>\n          <div>\n            <Poster\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movie.title}\n            />\n          </div>\n          <BoxInfo>\n            <Title>\n              {movie.title}&nbsp;\n              <SpanTitle>({movie.release_date.substring(0, 4)})</SpanTitle>\n            </Title>\n            <BoldText>Overview:</BoldText>\n            <Text>{movie.overview}</Text>\n            <BoldText>Rate:</BoldText>\n            <Text>{movie.vote_average}</Text>\n          </BoxInfo>\n        </ItemCast>\n        <li>\n          <StyledNavLink to={`/movies/${movieId}/cast`}>Cast</StyledNavLink>\n          <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n          <StyledNavLink to={`/movies/${movieId}/reviews`}>\n            Reviews\n          </StyledNavLink>\n          <Outlet />\n        </li>\n      </DetailsBox>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","// https://api.themoviedb.org/3/movie/11?api_key=f73865c93b2adf185bfa72e66b6a561c\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f73865c93b2adf185bfa72e66b6a561c';\n\nexport const getTrendingMovies = async timeWindow => {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const trendingMovies = response.data.results;\n    return trendingMovies;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: 'credits,videos',\n      },\n    });\n\n    const movieDetails = response.data;\n    return movieDetails;\n  } catch (error) {\n    console.log('Error fetching movie details:', error.message);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    });\n\n    const searchResults = response.data.results;\n    return searchResults;\n  } catch (error) {\n    console.log('Error searching movies:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const movieCast = response.data;\n    return movieCast;\n  } catch (error) {\n    console.log('Error fetching movie cast:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const movieReviews = response.data;\n    return movieReviews;\n  } catch (error) {\n    console.log('Error fetching movie reviews:', error.message);\n    throw error;\n  }\n};\n"],"names":["DetailsBox","styled","ItemCast","Poster","BoxInfo","Title","SpanTitle","BoldText","Text","GoBackBtn","StyledNavLink","NavLink","movieId","useParams","useState","movie","setMovie","navigate","useNavigate","useEffect","fetchMovieDetails","getMovieDetails","data","console","log","onClick","src","poster_path","alt","title","release_date","substring","overview","vote_average","to","axios","API_KEY","getTrendingMovies","timeWindow","params","api_key","response","trendingMovies","results","message","append_to_response","movieDetails","searchMovies","query","searchResults","getMovieCast","movieCast","getMovieReviews","movieReviews"],"sourceRoot":""}