{"version":3,"file":"static/js/575.8e1eb8c9.chunk.js","mappings":"2RAEaA,EAAQC,EAAAA,GAAAA,GAAH,mWAoBLC,EAAeD,EAAAA,GAAAA,GAAH,gLAUZE,EAAYF,EAAAA,GAAAA,KAAH,2FAMTG,EAAMH,EAAAA,GAAAA,IAAH,yCAIHI,EAAaJ,EAAAA,GAAAA,IAAH,wI,mBCpCjBK,GAAaL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,mIAkDhB,EAxCiB,WACf,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAkB,OAFvB,OAERC,EAFQ,OAGdJ,EAAUI,GAHI,gDAKdC,QAAQC,IAAI,yBAAZ,MALc,yDAAH,qDASfJ,GACD,GAAE,KAGD,iCACE,UAACZ,EAAD,WAAO,oBACW,SAACG,EAAD,UAAW,cAE7B,SAACD,EAAD,UACGO,EAAOQ,KAAI,SAAAC,GAAK,OACf,yBACE,SAACZ,EAAD,CAAYa,GAAE,kBAAaD,EAAME,IAAjC,UACE,UAAChB,EAAD,YACE,SAACC,EAAD,CACEgB,IAAG,yCAAoCH,EAAMI,aAC7CC,IAAKL,EAAMM,SAEb,uBAAIN,EAAMO,uBAPPP,EAAME,GADA,QAgBxB,C,kMCnDDM,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHd,EAAiB,mCAAG,WAAMe,GAAN,kGAENF,EAAAA,EAAAA,IAAU,sBAAuB,CACtDG,OAAQ,CACNC,QAASH,KAJgB,cAEvBI,EAFuB,OAQvBC,EAAiBD,EAASjB,KAAKmB,QARR,kBAStBD,GATsB,sCAW7BjB,QAAQC,IAAI,kCAAmC,KAAMkB,SAXxB,8DAAH,sDAgBjBC,EAAe,mCAAG,WAAMC,GAAN,kGAEJV,EAAAA,EAAAA,IAAA,iBAAoBU,GAAW,CACpDP,OAAQ,CACNC,QAASH,EACTU,mBAAoB,oBALG,cAErBN,EAFqB,OASrBO,EAAeP,EAASjB,KATH,kBAUpBwB,GAVoB,sCAY3BvB,QAAQC,IAAI,gCAAiC,KAAMkB,SAZxB,8DAAH,sDAiBfK,EAAY,mCAAG,WAAMC,GAAN,kGAEDd,EAAAA,EAAAA,IAAU,gBAAiB,CAChDG,OAAQ,CACNC,QAASH,EACTa,MAAOA,KALa,cAElBT,EAFkB,OASlBU,EAAgBV,EAASjB,KAAKmB,QATZ,kBAUjBQ,GAViB,sCAYxB1B,QAAQC,IAAI,0BAA2B,KAAMkB,SAZrB,8DAAH,sDAiBZQ,EAAY,mCAAG,WAAMN,GAAN,kGAEDV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAAuC,CAC5DP,OAAQ,CACNC,QAASH,KAJW,cAElBI,EAFkB,OAQlBY,EAAYZ,EAASjB,KARH,kBASjB6B,GATiB,sCAWxB5B,QAAQC,IAAI,6BAA8B,KAAMkB,SAXxB,8DAAH,sDAgBZU,EAAe,mCAAG,WAAMR,GAAN,kGAEJV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,YAAuC,CAC5DP,OAAQ,CACNC,QAASH,KAJc,cAErBI,EAFqB,OAQrBc,EAAed,EAASjB,KARH,kBASpB+B,GAToB,sCAW3B9B,QAAQC,IAAI,gCAAiC,KAAMkB,SAXxB,8DAAH,qD","sources":["Pages/Home/Home.styled.js","Pages/Home/Home.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: white;\n  letter-spacing: 2px;\n  margin-bottom: 30px;\n  animation: tracking-in-expand 0.7s cubic-bezier(0.215, 0.61, 0.355, 1) both;\n\n  @keyframes tracking-in-expand {\n    0% {\n      letter-spacing: -0.5em;\n      opacity: 0;\n    }\n    40% {\n      opacity: 0.6;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const ListTrending = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n  padding-bottom: 50px;\n  padding-left: 30px;\n  padding-right: 30px;\n`;\n\nexport const SpanTitle = styled.span`\n  color: #f44336;\n  letter-spacing: 2px;\n  margin-bottom: 30px;\n`;\n\nexport const Box = styled.div`\n  width: 140px;\n`;\n\nexport const PrevPoster = styled.img`\n  height: 200px;\n  width: 140px;\n\n  &:hover {\n    outline: 2px solid #f44336;\n    transition: 0.15s;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getTrendingMovies } from 'services/moviesAPI';\nimport { Box, ListTrending, PrevPoster, SpanTitle, Title } from './Home.styled';\nimport styled from '@emotion/styled';\n\nconst StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: white;\n\n  &:hover {\n    color: #f44336;\n    transition: 0.3s;\n  }\n`;\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getTrendingMovies('day');\n        setMovies(data);\n      } catch (error) {\n        console.log('Error fetching movies:', error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <>\n      <Title>\n        Trending movies <SpanTitle>today</SpanTitle>\n      </Title>\n      <ListTrending>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <StyledLink to={`/movies/${movie.id}`}>\n              <Box>\n                <PrevPoster\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.title}\n                />\n                <p>{movie.original_title}</p>\n              </Box>\n            </StyledLink>\n          </li>\n        ))}\n      </ListTrending>\n    </>\n  );\n};\n\nexport default HomePage;\n","// https://api.themoviedb.org/3/movie/11?api_key=f73865c93b2adf185bfa72e66b6a561c\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f73865c93b2adf185bfa72e66b6a561c';\n\nexport const getTrendingMovies = async timeWindow => {\n  try {\n    const response = await axios.get('/trending/movie/day', {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const trendingMovies = response.data.results;\n    return trendingMovies;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: 'credits,videos',\n      },\n    });\n\n    const movieDetails = response.data;\n    return movieDetails;\n  } catch (error) {\n    console.log('Error fetching movie details:', error.message);\n    throw error;\n  }\n};\n\nexport const searchMovies = async query => {\n  try {\n    const response = await axios.get('/search/movie', {\n      params: {\n        api_key: API_KEY,\n        query: query,\n      },\n    });\n\n    const searchResults = response.data.results;\n    return searchResults;\n  } catch (error) {\n    console.log('Error searching movies:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const movieCast = response.data;\n    return movieCast;\n  } catch (error) {\n    console.log('Error fetching movie cast:', error.message);\n    throw error;\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n\n    const movieReviews = response.data;\n    return movieReviews;\n  } catch (error) {\n    console.log('Error fetching movie reviews:', error.message);\n    throw error;\n  }\n};\n"],"names":["Title","styled","ListTrending","SpanTitle","Box","PrevPoster","StyledLink","NavLink","useState","movies","setMovies","useEffect","fetchData","getTrendingMovies","data","console","log","map","movie","to","id","src","poster_path","alt","title","original_title","axios","API_KEY","timeWindow","params","api_key","response","trendingMovies","results","message","getMovieDetails","movieId","append_to_response","movieDetails","searchMovies","query","searchResults","getMovieCast","movieCast","getMovieReviews","movieReviews"],"sourceRoot":""}